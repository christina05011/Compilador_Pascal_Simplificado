Program → PROGRAM id ; ConstBlock VarBlock MainCode

ConstBlock → CONST ConstList | Ɛ

ConstList → id = Value; ConstList | id = Value;

Value → INTEGER | REAL | STRING

NameList → id | id, NameList 

VarBlock → VAR VarList | Ɛ 

VarList → NameList : TypeDecl ; VarList | Ɛ

StmtList → Stmt StmtList  | e

Stmt → break; | continue; | Assign | Proc | IfBlock ElseBlock | ForBlock 

Assign → ID := Expr ;

Proc → READ (NameList) ; | READLN (NameList) ; | WRITE args ; | WRITELN args ;

args → (ExprList)

IfBlock → IF (Expr) THEN BEGIN StmtList END (;|ElseBlock)

ElseBlock → ELSE BEGIN StmtList END;

ForBlock → FOR id := Value Direction Expr DO BEGIN StmtList END ;

Direction → TO | DOWNTO

ExprList → Expr , ExprList | Expr

Expr → Expr_ RelOp Expr | Expr_

RelOp → = | <> | < | <= | >= | >

Expr_ → Term + Expr_ | Term - Expr_ | Term OR Expr_ | Term

Term → Factor MUL|DIV|MOD|AND Term	 	| Factor

Factor → ID | Value | (Expr) 

MainCode → BEGIN StmtList END.